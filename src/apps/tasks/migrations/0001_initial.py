# Generated by Django 4.2 on 2024-01-31 10:04

import apps.tasks.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BusinessProcess",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created time")),
                ("changed_at", models.DateTimeField(auto_now=True, db_index=True, verbose_name="Last change time")),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("description", models.TextField(blank=True, null=True, verbose_name="Description")),
                (
                    "excel_file",
                    models.FileField(blank=True, null=True, upload_to=apps.tasks.models.get_excel_file_upload_path),
                ),
                (
                    "parser_type",
                    models.CharField(
                        choices=[
                            ("dgd_code_and_dgd_title", "DGD code and DGD title"),
                            ("dgd_code_and_dgd_title_and_ugd_code", "DGD code and DGD title and UGD code"),
                        ],
                        default="dgd_code_and_dgd_title",
                        max_length=100,
                        verbose_name="Parser type",
                    ),
                ),
                ("has_row_numbers", models.BooleanField(default=False, verbose_name="Has row numbers")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("created", "Created"),
                            ("prepared_for_publishing", "Prepared for publishing"),
                            ("published", "Published"),
                            ("in_progress", "In progress"),
                            ("completed", "Completed"),
                            ("canceled", "Canceled"),
                        ],
                        default="created",
                        max_length=100,
                        verbose_name="Status",
                    ),
                ),
                ("deadline", models.DateTimeField(blank=True, null=True, verbose_name="Deadline")),
                (
                    "min_bpm_group",
                    models.CharField(
                        choices=[
                            ("BPM_KGD", "БПМ КГД"),
                            ("BPM_DGD_RUK_ZAM", "БПМ ДГД Руководитель заместитель"),
                            ("BPM_DGD_RUK_UPR", "БПМ ДГД Руководитель управления"),
                            ("BPM_DGD_NACH_OTD", "БПМ ДГД Начальник отдела"),
                            ("BPM_DGD_ISP", "БПМ ДГД Исполнитель"),
                            ("BPM_UGD_RUK_ZAM", "БПМ УГД Руководитель заместитель"),
                            ("BPM_UGD_RUK_OTD", "БПМ УГД Руководитель отдела"),
                            ("BPM_UGD_ISP", "БПМ УГД Исполнитель"),
                        ],
                        default="BPM_UGD_ISP",
                        help_text="Minimum BPM group that can work with this business process",
                        max_length=255,
                        verbose_name="Min BPM group",
                    ),
                ),
            ],
            options={
                "verbose_name": "Business process",
                "verbose_name_plural": "Business processes",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created time")),
                ("changed_at", models.DateTimeField(auto_now=True, db_index=True, verbose_name="Last change time")),
                ("row_index", models.CharField(verbose_name="Row index")),
                ("dgd_code", models.CharField(blank=True, max_length=255, null=True, verbose_name="DGD code")),
                (
                    "dgd_code_number",
                    models.CharField(blank=True, max_length=255, null=True, verbose_name="DGD code number"),
                ),
                ("dgd_name", models.CharField(blank=True, max_length=255, null=True, verbose_name="DGD name")),
                ("ugd_code", models.CharField(blank=True, max_length=255, null=True, verbose_name="UGD code")),
            ],
            options={
                "verbose_name": "Task",
                "verbose_name_plural": "Task",
            },
        ),
        migrations.CreateModel(
            name="TaskCell",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created time")),
                ("changed_at", models.DateTimeField(auto_now=True, db_index=True, verbose_name="Last change time")),
                ("value", models.TextField(verbose_name="Value")),
            ],
            options={
                "verbose_name": "Task cell",
                "verbose_name_plural": "Task cells",
            },
        ),
        migrations.CreateModel(
            name="TaskCellValueLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created time")),
                ("changed_at", models.DateTimeField(auto_now=True, db_index=True, verbose_name="Last change time")),
                ("old_value", models.TextField(verbose_name="Old value")),
                ("new_value", models.TextField(verbose_name="New value")),
            ],
            options={
                "verbose_name": "Task cell value log",
                "verbose_name_plural": "Task cell value logs",
            },
        ),
        migrations.CreateModel(
            name="TaskColumn",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, verbose_name="Created time")),
                ("changed_at", models.DateTimeField(auto_now=True, db_index=True, verbose_name="Last change time")),
                ("column_index", models.CharField(verbose_name="Column index")),
                ("column_name", models.TextField(verbose_name="Column name")),
                (
                    "column_type",
                    models.CharField(
                        choices=[
                            ("string", "String"),
                            ("text", "Text"),
                            ("integer", "Integer"),
                            ("float", "Float"),
                            ("date", "Date"),
                            ("date_time", "Date and time"),
                            ("boolean", "Boolean"),
                        ],
                        default="string",
                        max_length=50,
                        verbose_name="Column type",
                    ),
                ),
                ("is_editable", models.BooleanField(default=True, verbose_name="Is editable")),
                (
                    "business_process",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="columns",
                        to="tasks.businessprocess",
                        verbose_name="Task",
                    ),
                ),
            ],
            options={
                "verbose_name": "Task column",
                "verbose_name_plural": "Task columns",
            },
        ),
    ]
